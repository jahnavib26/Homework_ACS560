package com.acs560.restaurantsales.restaurant_sales.controllers;

import com.acs560.restaurantsales.restaurant_sales.models.Sales;
import com.acs560.restaurantsales.restaurant_sales.services.SalesService;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class SalesController {
    private final SalesService salesService;

    public SalesController(SalesService salesService) {
        this.salesServicpackage com.acs560.restaurantsales.restaurant_sales.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.acs560.restaurantsales.restaurant_sales.models.Sales;
import com.acs560.restaurantsales.restaurant_sales.services.SalesService;

@RestController
@RequestMapping("/api/v1/sales")
public class SalesController {

    @Autowired
    private SalesService salesService;

    @PostMapping
    public ResponseEntity<String> addSales(@RequestBody Sales sales) {
        try {
            salesService.addSales(sales);
            return new ResponseEntity<>("Sales added successfully.", HttpStatus.CREATED);
        } catch (IllegalArgumentException e) {
            return new ResponseEntity<>("Sales data already exists.", HttpStatus.BAD_REQUEST);
        }
    }

    @PutMapping
    public ResponseEntity<String> updateSales(@RequestBody Sales sales) {
        try {
            salesService.updateSales(sales);
            return new ResponseEntity<>("Sales updated successfully.", HttpStatus.OK);
        } catch (NoSuchElementException e) {
            return new ResponseEntity<>("Sales data not found.", HttpStatus.NOT_FOUND);
        }
    }

    @DeleteMapping
    public ResponseEntity<String> deleteSales(@RequestBody Sales sales) {
        try {
            salesService.deleteSales(sales);
            return new ResponseEntity<>("Sales deleted successfully.", HttpStatus.OK);
        } catch (NoSuchElementException e) {
            return new ResponseEntity<>("Sales data not found.", HttpStatus.NOT_FOUND);
        }
    }
}
e = salesService;
    }

    @GetMapping("/sales")
    public List<Sales> getAllSales() {
        return salesService.getAllSales();
    }

    @GetMapping("/sales/{date}")
    public Sales getSaleByDate(@PathVariable String date) {
        return salesService.getSaleByDate(date);
    }

    @GetMapping("/sales/item")
    public List<Sales> getSalesByItemName(@RequestParam String itemName) {
        return salesService.getSalesByItemName(itemName);
    }

    @GetMapping("/sales/mean")
    public double getMeanSales() {
        return salesService.calculateMeanSales();
    }
}
